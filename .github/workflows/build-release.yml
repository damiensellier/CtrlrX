name: Build Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run several configurations.
      # TODO: add MacOS
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            name: windows
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            name: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        echo "OS: $RUNNER_OS"
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt install -y binutils-dev libasound2-dev libboost-dev libcurl4-gnutls-dev libfreetype6-dev libgl1-mesa-dev libglapi-mesa libiberty-dev libsframe1 libudev-dev libxcursor-dev libxinerama-dev libxrandr-dev xorg-dev
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo "for future, if we need to install sth on windows"
        fi
      shell: bash

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: Scripts/post-commit

    - name: Show Installer Directory
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          ls -l ./Packaging/Linux
        elif [ "$RUNNER_OS" == "Windows" ]; then
          ls -l ./Packaging/Windows
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        path: Packaging/Linux/Ctrlr-*.sh
        name: build-${{ matrix.name }}
